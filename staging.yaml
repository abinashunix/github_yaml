name: Deploy terraform
on:
   push:
    branches:
      - dev
      - prod
env:
  GCP_PROJECT_ID: ${{vars.PROJECT_ID}}
  TF_VAR_project_id: ${{vars.PROJECT_ID}}
  TF_VAR_backend_bucket: ${{vars.BACKEND_BUCKET}}
  
jobs:
  build-and-deploy-dev:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/dev'
    environment: dev
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    - name: Configure gcloud CLI
      uses: google-github-actions/auth@v0
      with:
        credentials_json: ${{ secrets.JSON_SOURCE_SERVICE_ACCOUNT }}
    - name: Deploy terraform
      run: |
        cd terraform
        terraform init -backend-config="bucket=${{vars.BACKEND_BUCKET}}"
        terraform plan 
        terraform apply --auto-approve
    # - name: 'Set up Cloud SDK'
    #   uses: 'google-github-actions/setup-gcloud@v1'
    # - name: Run Query
    #   run: |
    #     bq query --use_legacy_sql=false < 'Queries and Routines'/D_Scopes.sql

  build-and-deploy-prod:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/prod'
    environment: prod
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    - name: Configure gcloud CLI
      uses: google-github-actions/auth@v0
      with:
        credentials_json: ${{ secrets.JSON_SOURCE_SERVICE_ACCOUNT }}
    - name: Deploy terraform
      run: |
        cd terraform
        terraform init -backend-config="bucket=${{vars.BACKEND_BUCKET}}"
        terraform plan 
        terraform apply --auto-approve
    # - name: 'Set up Cloud SDK'
    #   uses: 'google-github-actions/setup-gcloud@v1'
    # - name: Run Query
    #   run: |
    #     bq query --use_legacy_sql=false < 'Queries and Routines'/D_Scopes.sql
            
