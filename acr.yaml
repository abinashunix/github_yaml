name: acr orchestration job
on:
  push:
   branches:
     - dev
     - prod
   paths:
    - 'carbon-registry-orchestration/acr-registry/**'
 #   - '.github/workflows/acr-orchestration-job.yaml'
env:
  GCP_PROJECT_ID: ${{vars.PROJECT_ID}}
  IMAGE_REGISTRY: asia.gcr.io
  IMAGE_NAME: acr-orchestration-jobs
  REGION: asia-south1
jobs:
  build-and-deploy-dev:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/dev'
    environment: dev
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    - name: Configure gcloud CLI
      uses: google-github-actions/auth@v0
      with:
        credentials_json: ${{ secrets.JSON_SOURCE_SERVICE_ACCOUNT }}
    - name: Build and push Docker images
      run: |
        gcloud auth configure-docker $IMAGE_REGISTRY
        cd carbon-registry-orchestration/acr-registry && docker build -t $IMAGE_REGISTRY/$GCP_PROJECT_ID/$IMAGE_NAME --build-arg GCP_PROJECT_ID="$GCP_PROJECT_ID"  .
        docker push $IMAGE_REGISTRY/$GCP_PROJECT_ID/$IMAGE_NAME

  build-and-deploy-prod:
      runs-on: ubuntu-latest
      if: github.ref == 'refs/heads/prod'
      environment: prod
      steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Configure gcloud CLI
        uses: google-github-actions/auth@v0
        with:
          credentials_json: ${{ secrets.JSON_SOURCE_SERVICE_ACCOUNT }}
      - name: Build and push Docker images
        run: |
          gcloud auth configure-docker $IMAGE_REGISTRY
          cd carbon-registry-orchestration/acr-registry && docker build -t $IMAGE_REGISTRY/$GCP_PROJECT_ID/$IMAGE_NAME --build-arg GCP_PROJECT_ID="$GCP_PROJECT_ID"  .
          docker push $IMAGE_REGISTRY/$GCP_PROJECT_ID/$IMAGE_NAME
  
    # - name: deploy terraform
    #   run: |
    #     cd terraform
    #     terraform init 
    #     terraform plan
    #     terraform apply --auto-approve #
      
         
